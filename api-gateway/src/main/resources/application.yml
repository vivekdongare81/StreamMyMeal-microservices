server:
  port: 8090

environment: General Environment

management:
  endpoint:
    health:
      show-details: always
  endpoints:
    web:
      exposure:
        include: "*"
  tracing:
    sampling:
      probability: 1.0

spring:
  profiles:
    active: dev
  application:
    name: gateway
  cloud:
    bootstrap:
      enabled: true
    gateway:
      default-filters:
        - name: Retry
          args:
            retries: 3
            backoff:
              firstBackoff: 50ms
              maxBackoff: 500ms
#        - name: RequestRateLimiter
#          args:
#            redis-rate-limiter:
#              replenishRate: 500
#              burstCapacity: 1000
#              requestedTokens: 1
      routes:
        - id: customer
          uri: http://localhost:8080
          predicates:
            - Path=/customer/**
          filters:
            - name: CircuitBreaker
              args:
                name: customer
                fallbackuri: /customerFallback
        - id: order
          uri: http://localhost:8082
          predicates:
            - Path=/order/**
          filters:
            - name: CircuitBreaker
              args:
                name: order
                fallbackuri: /orderFallback
        - id: delivery
          uri: http://localhost:8081
          predicates:
            - Path=/delivery/**
          filters:
            - name: CircuitBreaker
              args:
                name: delivery
                fallbackuri: /deliveryFallback
        - id: product
          uri: http://localhost:8083
          predicates:
            - Path=/product/**
          filters:
            - name: CircuitBreaker
              args:
                name: product
                fallbackuri: /productsFallback
        - id: restaurant
          uri: http://localhost:8084
          predicates:
            - Path=/restaurant/**
          filters:
            - name: CircuitBreaker
              args:
                name: restaurant
                fallbackuri: /restaurantFallback


logging:
  level:
    org.springframework.cloud.gateway: TRACE

resilience4j:
  circuitBreaker:
    instances:
      customer:
        slidingWindowSize: 10
        registerHealthIndicator: true
        failureDurationThreshold: 50
        waitDurationInOpenState: 10000
        permittedNumberOfCallsInOpenState: 5
      order:
        slidingWindowSize: 10
        registerHealthIndicator: true
        failureDurationThreshold: 50
        waitDurationInOpenState: 10000
        permittedNumberOfCallsInOpenState: 5
      delivery:
        slidingWindowSize: 10
        registerHealthIndicator: true
        failureDurationThreshold: 50
        waitDurationInOpenState: 10000
        permittedNumberOfCallsInOpenState: 5
      restaurant:
        slidingWindowSize: 10
        registerHealthIndicator: true
        failureDurationThreshold: 50
        waitDurationInOpenState: 10000
        permittedNumberOfCallsInOpenState: 5
      product:
        slidingWindowSize: 10
        registerHealthIndicator: true
        failureDurationThreshold: 50
        waitDurationInOpenState: 10000
        permittedNumberOfCallsInOpenState: 5
  timeLimiter:
    instances:
      customer:
        timeoutDuration: 3s
      order:
        timeoutDuration: 3s
      delivery:
        timeoutDuration: 3s
      restaurant:
        timeoutDuration: 3s
      product:
        timeoutDuration: 3s
