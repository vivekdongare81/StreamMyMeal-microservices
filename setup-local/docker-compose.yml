services:
###################  Redis SERVICE ########################
  redis:
    image: redis
    container_name: redis-ms
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    extends:
      file: common-config.yml
      service: network-deploy-service
      
###################  Kafka service ########################
  kafka:
    image: docker.io/bitnami/kafka:3.9
    ports:
      - "29092:9092" #9092:9092
    volumes:
      - "kafka_data:/bitnami"
    environment:
      # Kraft settings
      - KAFKA_CFG_NODE_ID=0
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka:9093
      # Listeners
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093
      
      # ADVERTISED Listners default
      # KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://:9092
      
      # Kafka local - 9092
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://localhost:29092 #9092

      # Kafka docker - 9092
      #- KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092

      # Kafka docker + local - 9092 9093
      #- KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092,PLAINTEXT://localhost:9093

      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=PLAINTEXT:PLAINTEXT,CONTROLLER:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=PLAINTEXT

    extends:
      file: common-config.yml
      service: network-deploy-service
      
###################  Users DB SERVICE ########################
  allinoneDB: 
    container_name: allinoneDB
    ports:
      - 5433:5432
    environment:
      POSTGRES_USER: root
      POSTGRES_PASSWORD: root
    extends:
      file: common-config.yml
      service: microservice-db-config
    volumes:
    - ./init-multiple-dbs.sql:/docker-entrypoint-initdb.d/init.sql

 ###################  Others ########################

volumes: 
  kafka_data:
    driver: local
    
networks:
  devsoncallNetwork: #NETWORK name inside docker
    driver: "bridge"