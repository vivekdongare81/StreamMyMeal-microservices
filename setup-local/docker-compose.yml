services:
###################  Redis SERVICE ########################
  redis:
    image: redis
    container_name: redis-ms
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    extends:
      file: common-config.yml
      service: network-deploy-service
###################  Kafka service ########################
  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: kafka
    ports:
      - "29092:9092"
    environment:
      KAFKA_KRAFT_MODE: "true"
      KAFKA_PROCESS_ROLES: "broker,controller"
      KAFKA_NODE_ID: "1"
      KAFKA_CONTROLLER_QUORUM_VOTERS: "1@kafka:9093"
      KAFKA_LISTENERS: "PLAINTEXT://kafka:9092,CONTROLLER://kafka:9093"
      KAFKA_ADVERTISED_LISTENERS: "PLAINTEXT://localhost:29092"
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: "PLAINTEXT:PLAINTEXT,CONTROLLER:PLAINTEXT"
      KAFKA_CONTROLLER_LISTENER_NAMES: "CONTROLLER"
      KAFKA_INTER_BROKER_LISTENER_NAME: "PLAINTEXT"
      KAFKA_LOG_DIRS: "/tmp/kraft-combined-logs"
      CLUSTER_ID: "my-cluster-id"
    extends:
      file: common-config.yml
      service: network-deploy-service

###################  Users DB SERVICE ########################
  allinoneDB: 
    container_name: allinoneDB
    ports:
      - 5433:5432
    environment:
      POSTGRES_USER: root
      POSTGRES_PASSWORD: root
    extends:
      file: common-config.yml
      service: microservice-db-config
    volumes:
    - ./init-multiple-dbs.sql:/docker-entrypoint-initdb.d/init.sql

 ###################  Others ########################

volumes: 
  kafka_data:
    driver: local
    
networks:
  devsoncallNetwork: #NETWORK name inside docker
    driver: "bridge"